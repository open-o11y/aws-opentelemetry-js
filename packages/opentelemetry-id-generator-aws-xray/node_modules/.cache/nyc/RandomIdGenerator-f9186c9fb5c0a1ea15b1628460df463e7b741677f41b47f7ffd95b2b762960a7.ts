"use strict";/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function cov_1se2u0d32(){var path="/Users/zocong/Documents/forked/aws-opentelemetry-js/packages/opentelemetry-id-generator-aws-xray/src/platform/node/RandomIdGenerator.ts";var hash="2430d276e6de5dcc759d521c85089ecd46338d0d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/zocong/Documents/forked/aws-opentelemetry-js/packages/opentelemetry-id-generator-aws-xray/src/platform/node/RandomIdGenerator.ts",statementMap:{"0":{start:{line:17,column:0},end:{line:17,column:62}},"1":{start:{line:18,column:0},end:{line:18,column:35}},"2":{start:{line:19,column:15},end:{line:19,column:32}},"3":{start:{line:20,column:22},end:{line:20,column:23}},"4":{start:{line:21,column:23},end:{line:21,column:25}},"5":{start:{line:28,column:8},end:{line:28,column:66}},"6":{start:{line:35,column:8},end:{line:35,column:65}},"7":{start:{line:38,column:0},end:{line:38,column:46}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:22},end:{line:29,column:5}},line:27},"1":{name:"(anonymous_1)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:21},end:{line:36,column:5}},line:34}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{"0":0,"1":0},b:{},inputSourceMap:{version:3,file:"/Users/zocong/Documents/forked/aws-opentelemetry-js/packages/opentelemetry-id-generator-aws-xray/src/platform/node/RandomIdGenerator.ts",sources:["/Users/zocong/Documents/forked/aws-opentelemetry-js/packages/opentelemetry-id-generator-aws-xray/src/platform/node/RandomIdGenerator.ts"],names:[],mappings:";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,iCAAiC;AAGjC,MAAM,aAAa,GAAG,CAAC,CAAC;AACxB,MAAM,cAAc,GAAG,EAAE,CAAC;AAE1B,MAAa,iBAAiB;IAC5B;;;OAGG;IACH,eAAe;QACb,OAAO,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED;;;OAGG;IACH,cAAc;QACZ,OAAO,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;CACF;AAhBD,8CAgBC",sourcesContent:["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as crypto from 'crypto';\nimport { IdGenerator } from '@opentelemetry/core';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId(): string {\n    return crypto.randomBytes(TRACE_ID_BYTES).toString('hex');\n  }\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId(): string {\n    return crypto.randomBytes(SPAN_ID_BYTES).toString('hex');\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2430d276e6de5dcc759d521c85089ecd46338d0d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1se2u0d32=function(){return actualCoverage;};}return actualCoverage;}cov_1se2u0d32();cov_1se2u0d32().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1se2u0d32().s[1]++;exports.RandomIdGenerator=void 0;const crypto=(cov_1se2u0d32().s[2]++,require("crypto"));const SPAN_ID_BYTES=(cov_1se2u0d32().s[3]++,8);const TRACE_ID_BYTES=(cov_1se2u0d32().s[4]++,16);class RandomIdGenerator{/**
     * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex
     * characters corresponding to 128 bits.
     */generateTraceId(){cov_1se2u0d32().f[0]++;cov_1se2u0d32().s[5]++;return crypto.randomBytes(TRACE_ID_BYTES).toString('hex');}/**
     * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex
     * characters corresponding to 64 bits.
     */generateSpanId(){cov_1se2u0d32().f[1]++;cov_1se2u0d32().s[6]++;return crypto.randomBytes(SPAN_ID_BYTES).toString('hex');}}cov_1se2u0d32().s[7]++;exports.RandomIdGenerator=RandomIdGenerator;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3pvY29uZy9Eb2N1bWVudHMvZm9ya2VkL2F3cy1vcGVudGVsZW1ldHJ5LWpzL3BhY2thZ2VzL29wZW50ZWxlbWV0cnktaWQtZ2VuZXJhdG9yLWF3cy14cmF5L3NyYy9wbGF0Zm9ybS9ub2RlL1JhbmRvbUlkR2VuZXJhdG9yLnRzIiwic291cmNlcyI6WyIvVXNlcnMvem9jb25nL0RvY3VtZW50cy9mb3JrZWQvYXdzLW9wZW50ZWxlbWV0cnktanMvcGFja2FnZXMvb3BlbnRlbGVtZXRyeS1pZC1nZW5lcmF0b3ItYXdzLXhyYXkvc3JjL3BsYXRmb3JtL25vZGUvUmFuZG9tSWRHZW5lcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOzs7QUFFSCxpQ0FBaUM7QUFHakMsTUFBTSxhQUFhLEdBQUcsQ0FBQyxDQUFDO0FBQ3hCLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUUxQixNQUFhLGlCQUFpQjtJQUM1Qjs7O09BR0c7SUFDSCxlQUFlO1FBQ2IsT0FBTyxNQUFNLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsY0FBYztRQUNaLE9BQU8sTUFBTSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0QsQ0FBQztDQUNGO0FBaEJELDhDQWdCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCAqIGFzIGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IHsgSWRHZW5lcmF0b3IgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9jb3JlJztcblxuY29uc3QgU1BBTl9JRF9CWVRFUyA9IDg7XG5jb25zdCBUUkFDRV9JRF9CWVRFUyA9IDE2O1xuXG5leHBvcnQgY2xhc3MgUmFuZG9tSWRHZW5lcmF0b3IgaW1wbGVtZW50cyBJZEdlbmVyYXRvciB7XG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgcmFuZG9tIDE2LWJ5dGUgdHJhY2UgSUQgZm9ybWF0dGVkL2VuY29kZWQgYXMgYSAzMiBsb3dlcmNhc2UgaGV4XG4gICAqIGNoYXJhY3RlcnMgY29ycmVzcG9uZGluZyB0byAxMjggYml0cy5cbiAgICovXG4gIGdlbmVyYXRlVHJhY2VJZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoVFJBQ0VfSURfQllURVMpLnRvU3RyaW5nKCdoZXgnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgcmFuZG9tIDgtYnl0ZSBzcGFuIElEIGZvcm1hdHRlZC9lbmNvZGVkIGFzIGEgMTYgbG93ZXJjYXNlIGhleFxuICAgKiBjaGFyYWN0ZXJzIGNvcnJlc3BvbmRpbmcgdG8gNjQgYml0cy5cbiAgICovXG4gIGdlbmVyYXRlU3BhbklkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyhTUEFOX0lEX0JZVEVTKS50b1N0cmluZygnaGV4Jyk7XG4gIH1cbn1cbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy96b2NvbmcvRG9jdW1lbnRzL2ZvcmtlZC9hd3Mtb3BlbnRlbGVtZXRyeS1qcy9wYWNrYWdlcy9vcGVudGVsZW1ldHJ5LWlkLWdlbmVyYXRvci1hd3MteHJheS9zcmMvcGxhdGZvcm0vbm9kZS9SYW5kb21JZEdlbmVyYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiYUFBQTs7Ozs7Ozs7Ozs7Ozs7MitHQWNHO2lPQUVILEtBQUEsQ0FBQSxNQUFBLHlCQUFBLE9BQUEsQ0FBQSxRQUFBLENBQUEsQ0FBQSxDQUdBLEtBQU0sQ0FBQSxhQUFhLHlCQUFHLENBQUgsQ0FBbkIsQ0FDQSxLQUFNLENBQUEsY0FBYyx5QkFBRyxFQUFILENBQXBCLENBRUEsS0FBYSxDQUFBLGlCQUFpQixDQUM1Qjs7O09BSUEsZUFBZSxFQUFBLCtDQUNiLE1BQU8sQ0FBQSxNQUFNLENBQUMsV0FBUCxDQUFtQixjQUFuQixFQUFtQyxRQUFuQyxDQUE0QyxLQUE1QyxDQUFQLENBQ0QsQ0FFRDs7O09BSUEsY0FBYyxFQUFBLCtDQUNaLE1BQU8sQ0FBQSxNQUFNLENBQUMsV0FBUCxDQUFtQixhQUFuQixFQUFrQyxRQUFsQyxDQUEyQyxLQUEzQyxDQUFQLENBQ0QsQ0FmMkIsQyx1QkFBOUIsT0FBQSxDQUFBLGlCQUFBLENBQUEsaUJBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCAqIGFzIGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IHsgSWRHZW5lcmF0b3IgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9jb3JlJztcblxuY29uc3QgU1BBTl9JRF9CWVRFUyA9IDg7XG5jb25zdCBUUkFDRV9JRF9CWVRFUyA9IDE2O1xuXG5leHBvcnQgY2xhc3MgUmFuZG9tSWRHZW5lcmF0b3IgaW1wbGVtZW50cyBJZEdlbmVyYXRvciB7XG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgcmFuZG9tIDE2LWJ5dGUgdHJhY2UgSUQgZm9ybWF0dGVkL2VuY29kZWQgYXMgYSAzMiBsb3dlcmNhc2UgaGV4XG4gICAqIGNoYXJhY3RlcnMgY29ycmVzcG9uZGluZyB0byAxMjggYml0cy5cbiAgICovXG4gIGdlbmVyYXRlVHJhY2VJZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoVFJBQ0VfSURfQllURVMpLnRvU3RyaW5nKCdoZXgnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgcmFuZG9tIDgtYnl0ZSBzcGFuIElEIGZvcm1hdHRlZC9lbmNvZGVkIGFzIGEgMTYgbG93ZXJjYXNlIGhleFxuICAgKiBjaGFyYWN0ZXJzIGNvcnJlc3BvbmRpbmcgdG8gNjQgYml0cy5cbiAgICovXG4gIGdlbmVyYXRlU3BhbklkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyhTUEFOX0lEX0JZVEVTKS50b1N0cmluZygnaGV4Jyk7XG4gIH1cbn1cbiJdfQ==