"use strict";
/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.patchCallback = exports.getJDBCString = void 0;
const api_1 = require("@opentelemetry/api");
function getJDBCString(params) {
    const host = params.host || 'localhost'; // postgres defaults to localhost
    const port = params.port || 5432; // postgres defaults to port 5432
    const database = params.database || '';
    return `jdbc:postgresql://${host}:${port}/${database}`;
}
exports.getJDBCString = getJDBCString;
function patchCallback(span, cb) {
    return function patchedCallback(err, res, done) {
        if (err) {
            span.setStatus({
                code: api_1.CanonicalCode.UNKNOWN,
                message: err.message,
            });
        }
        else if (res) {
            span.setStatus({ code: api_1.CanonicalCode.OK });
        }
        span.end();
        cb.call(this, err, res, done);
    };
}
exports.patchCallback = patchCallback;
//# sourceMappingURL=utils.js.map