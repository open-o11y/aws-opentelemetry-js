"use strict";
/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.plugin = exports.IORedisPlugin = void 0;
const core_1 = require("@opentelemetry/core");
const shimmer = require("shimmer");
const utils_1 = require("./utils");
const version_1 = require("./version");
class IORedisPlugin extends core_1.BasePlugin {
    constructor(moduleName) {
        super('@opentelemetry/plugin-ioredis', version_1.VERSION);
        this.moduleName = moduleName;
        this.supportedVersions = ['>1 <5'];
    }
    patch() {
        this._logger.debug('Patching ioredis.prototype.sendCommand');
        shimmer.wrap(this._moduleExports.prototype, 'sendCommand', this._patchSendCommand());
        this._logger.debug('patching ioredis.prototype.connect');
        shimmer.wrap(this._moduleExports.prototype, 'connect', this._patchConnection());
        return this._moduleExports;
    }
    unpatch() {
        if (this._moduleExports) {
            shimmer.unwrap(this._moduleExports.prototype, 'sendCommand');
            shimmer.unwrap(this._moduleExports.prototype, 'connect');
        }
    }
    /**
     * Patch send command internal to trace requests
     */
    _patchSendCommand() {
        const tracer = this._tracer;
        return (original) => {
            return utils_1.traceSendCommand(tracer, original, exports.plugin._config);
        };
    }
    _patchConnection() {
        const tracer = this._tracer;
        return (original) => {
            return utils_1.traceConnection(tracer, original);
        };
    }
}
exports.IORedisPlugin = IORedisPlugin;
IORedisPlugin.COMPONENT = 'ioredis';
IORedisPlugin.DB_TYPE = 'redis';
exports.plugin = new IORedisPlugin(IORedisPlugin.COMPONENT);
//# sourceMappingURL=ioredis.js.map