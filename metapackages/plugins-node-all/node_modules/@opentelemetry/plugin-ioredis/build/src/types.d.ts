/// <reference types="node" />
import * as ioredisTypes from 'ioredis';
import { PluginConfig } from '@opentelemetry/api';
export interface IoredisCommand {
    reject: (err: Error) => void;
    resolve: (result: {}) => void;
    promise: Promise<{}>;
    args: Array<string | Buffer | number>;
    callback: ioredisTypes.CallbackFunction<unknown>;
    name: string;
}
export interface IoredisPluginClientTypes {
    options: ioredisTypes.RedisOptions;
}
/**
 * Function that can be used to serialize db.statement tag
 * @param cmdName - The name of the command (eg. set, get, mset)
 * @param cmdArgs - Array of arguments passed to the command
 *
 * @returns serialized string that will be used as the db.statement attribute.
 */
export declare type DbStatementSerializer = (cmdName: IoredisCommand['name'], cmdArgs: IoredisCommand['args']) => string;
/**
 * Options available for the IORedis Plugin (see [documentation](https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-plugin-ioredis#ioredis-plugin-options))
 */
export interface IoredisPluginConfig extends PluginConfig {
    /** Custom serializer function for the db.statement tag */
    dbStatementSerializer?: DbStatementSerializer;
}
//# sourceMappingURL=types.d.ts.map